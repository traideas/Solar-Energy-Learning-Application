sudo docker-compose up # for running the docker

sudo docker-compose exec solarlms sh # for getting the bash

# then run the migration command in the docker bash

python manage.py makemigrations studentportal

python manage.py migrate
# for creating migration without session use the below command
python manage.py migrate studentportal

python manage.py createsuperuser 

Username: adminMyrel
Email address: admin@myrel.com
Password: admin123456

add aws ip in on settings.py =>> ALLOWED_HOSTS = []
and add cors header on the same file


for configuring ssl certificate :
first 
cd /
sudo mkdir -p .well-known/pki-validation

cd .well-known/pki-validation
create file that is given 
then 
write

*****
server {
        listen 80;
        listen [::]:80;
        root /;
        access_log /var/log/nginx/reverse-access.log;
        error_log /var/log/nginx/reverse-error.log;


        location //.well-known/pki-validation/ {
                    #root /data;
                    index AB67ABA7DE517C55DCE8C66EE2AF6CF6.txt;
  }

}
*****

sudo nano ln -s /etc/nginx/sites-available/reverse-proxy.conf /etc/nginx/sites-enabled/reverse-proxy.conf

then add 

server {
        listen 443;
        listen [::]:443;
        ssl_certificate /etc/nginx/cert.crt;
        ssl_certificate_key /etc/nginx/cert.key;

        ssl on;
        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;

        access_log /var/log/nginx/reverse-access.log;
        error_log /var/log/nginx/reverse-error.log;

        location / {
                    proxy_set_header        Host $host;
                    proxy_set_header        X-Real-IP $remote_addr;
                    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header        X-Forwarded-Proto $scheme;
                    proxy_pass http://127.0.0.1:8000;
  }
}





